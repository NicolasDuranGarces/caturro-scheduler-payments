version: "3.9"

networks:
  app_net:
    driver: bridge

services:
  reverse-proxy:
    image: nginx:1.27-alpine
    depends_on:
      - frontend-builder
      - backend
    volumes:
      - ./nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_build:/usr/share/nginx/html:ro
    env_file:
      - .env
    ports:
      - "${NGINX_HOST_PORT:-3100}:80"
    networks:
      - app_net

  frontend-builder:
    image: node:20-alpine
    working_dir: /app
    env_file:
      - .env
    volumes:
      - ./frontend:/app
      - frontend_build:/app/dist
    command: sh -c "npm install && npm run build"
    networks:
      - app_net
    restart: "no"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      BACKEND_PORT: ${BACKEND_PORT}
      DATABASE_URL: ${DATABASE_URL}
      NODE_ENV: production
    expose:
      - "${BACKEND_PORT}"
    depends_on:
      - mysql
    networks:
      - app_net

  mysql:
    image: mysql:8.4
    restart: unless-stopped
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app_net

  adminer:
    image: adminer:4
    depends_on:
      - mysql
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    expose:
      - "8080"
    networks:
      - app_net

volumes:
  frontend_build:
  mysql_data:
